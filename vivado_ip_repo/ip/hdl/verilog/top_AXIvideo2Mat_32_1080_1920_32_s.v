// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.2
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_AXIvideo2Mat_32_1080_1920_32_s (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        img_data_stream_0_V_din,
        img_data_stream_0_V_full_n,
        img_data_stream_0_V_write,
        img_data_stream_1_V_din,
        img_data_stream_1_V_full_n,
        img_data_stream_1_V_write,
        img_data_stream_2_V_din,
        img_data_stream_2_V_full_n,
        img_data_stream_2_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_st2_fsm_1 = 3'b1;
parameter    ap_ST_st3_fsm_2 = 3'b10;
parameter    ap_ST_st4_fsm_3 = 3'b11;
parameter    ap_ST_pp1_stg0_fsm_4 = 3'b100;
parameter    ap_ST_st7_fsm_5 = 3'b101;
parameter    ap_ST_st8_fsm_6 = 3'b110;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [7:0] img_data_stream_0_V_din;
input   img_data_stream_0_V_full_n;
output   img_data_stream_0_V_write;
output  [7:0] img_data_stream_1_V_din;
input   img_data_stream_1_V_full_n;
output   img_data_stream_1_V_write;
output  [7:0] img_data_stream_2_V_din;
input   img_data_stream_2_V_full_n;
output   img_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg INPUT_STREAM_TREADY;
reg img_data_stream_0_V_write;
reg img_data_stream_1_V_write;
reg img_data_stream_2_V_write;
reg   [2:0] ap_CS_fsm = 3'b000;
reg   [0:0] eol_1_reg_168;
reg   [31:0] axi_data_V_1_reg_179;
reg   [10:0] p_1_reg_190;
reg   [0:0] eol_reg_201;
reg   [0:0] axi_last_V_2_reg_213;
reg   [31:0] p_Val2_s_reg_225;
reg   [0:0] eol_2_reg_237;
reg   [31:0] tmp_data_V_reg_378;
reg   [0:0] tmp_last_V_reg_386;
wire   [10:0] i_V_fu_309_p2;
reg   [10:0] i_V_reg_401;
wire   [0:0] exitcond2_fu_315_p2;
reg   [0:0] exitcond2_reg_406;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
wire   [0:0] brmerge_fu_330_p2;
reg    ap_sig_bdd_81;
reg    ap_sig_bdd_92;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [10:0] j_V_fu_321_p2;
wire   [7:0] tmp_4_fu_349_p1;
reg   [7:0] tmp_4_reg_418;
reg   [7:0] tmp_5_reg_423;
reg   [7:0] tmp_6_reg_428;
reg    ap_sig_bdd_113;
wire   [0:0] exitcond1_fu_303_p2;
reg   [0:0] axi_last_V_3_reg_248;
reg   [0:0] axi_last_V1_reg_137;
reg   [31:0] axi_data_V_3_reg_260;
reg   [31:0] axi_data_V1_reg_147;
reg   [10:0] p_s_reg_157;
reg   [0:0] eol_1_phi_fu_171_p4;
reg   [31:0] axi_data_V_1_phi_fu_182_p4;
reg   [0:0] eol_phi_fu_205_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_reg_213pp1_it0;
wire   [31:0] ap_reg_phiprechg_p_Val2_s_reg_225pp1_it0;
reg   [31:0] p_Val2_s_phi_fu_229_p4;
wire   [0:0] ap_reg_phiprechg_eol_2_reg_237pp1_it0;
wire   [0:0] eol_1_mux_fu_342_p2;
reg   [0:0] eol_3_reg_272;
reg   [0:0] sof_1_fu_94;
wire   [0:0] not_sof_2_fu_336_p2;
wire   [0:0] tmp_user_V_fu_294_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_sig_bdd_80;
reg    ap_sig_bdd_151;
reg    ap_sig_bdd_99;
reg    ap_sig_bdd_170;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_303_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n == 1'b0) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_fu_315_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_303_p2)) | ((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        axi_data_V1_reg_147 <= tmp_data_V_reg_378;
    end else if ((ap_ST_st8_fsm_6 == ap_CS_fsm)) begin
        axi_data_V1_reg_147 <= axi_data_V_3_reg_260;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        axi_data_V_1_reg_179 <= p_Val2_s_reg_225;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_303_p2))) begin
        axi_data_V_1_reg_179 <= axi_data_V1_reg_147;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0))) begin
        axi_data_V_3_reg_260 <= axi_data_V_1_phi_fu_182_p4;
    end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == eol_3_reg_272) & ~ap_sig_bdd_113)) begin
        axi_data_V_3_reg_260 <= INPUT_STREAM_TDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        axi_last_V1_reg_137 <= tmp_last_V_reg_386;
    end else if ((ap_ST_st8_fsm_6 == ap_CS_fsm)) begin
        axi_last_V1_reg_137 <= axi_last_V_3_reg_248;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_99) begin
        if (ap_sig_bdd_151) begin
            axi_last_V_2_reg_213 <= eol_1_phi_fu_171_p4;
        end else if (ap_sig_bdd_80) begin
            axi_last_V_2_reg_213 <= INPUT_STREAM_TLAST;
        end else if ((ap_true == ap_true)) begin
            axi_last_V_2_reg_213 <= ap_reg_phiprechg_axi_last_V_2_reg_213pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0))) begin
        axi_last_V_3_reg_248 <= eol_1_phi_fu_171_p4;
    end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == eol_3_reg_272) & ~ap_sig_bdd_113)) begin
        axi_last_V_3_reg_248 <= INPUT_STREAM_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        eol_1_reg_168 <= axi_last_V_2_reg_213;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_303_p2))) begin
        eol_1_reg_168 <= axi_last_V1_reg_137;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_99) begin
        if (ap_sig_bdd_151) begin
            eol_2_reg_237 <= eol_1_mux_fu_342_p2;
        end else if (ap_sig_bdd_80) begin
            eol_2_reg_237 <= INPUT_STREAM_TLAST;
        end else if ((ap_true == ap_true)) begin
            eol_2_reg_237 <= ap_reg_phiprechg_eol_2_reg_237pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0))) begin
        eol_3_reg_272 <= eol_phi_fu_205_p4;
    end else if (((ap_ST_st7_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == eol_3_reg_272) & ~ap_sig_bdd_113)) begin
        eol_3_reg_272 <= INPUT_STREAM_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        eol_reg_201 <= eol_2_reg_237;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_303_p2))) begin
        eol_reg_201 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (exitcond2_fu_315_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        p_1_reg_190 <= j_V_fu_321_p2;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_303_p2))) begin
        p_1_reg_190 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_99) begin
        if (ap_sig_bdd_151) begin
            p_Val2_s_reg_225 <= axi_data_V_1_phi_fu_182_p4;
        end else if (ap_sig_bdd_80) begin
            p_Val2_s_reg_225 <= INPUT_STREAM_TDATA;
        end else if ((ap_true == ap_true)) begin
            p_Val2_s_reg_225 <= ap_reg_phiprechg_p_Val2_s_reg_225pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        p_s_reg_157 <= ap_const_lv11_0;
    end else if ((ap_ST_st8_fsm_6 == ap_CS_fsm)) begin
        p_s_reg_157 <= i_V_reg_401;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (exitcond2_fu_315_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        sof_1_fu_94 <= ap_const_lv1_0;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        sof_1_fu_94 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        exitcond2_reg_406 <= exitcond2_fu_315_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        i_V_reg_401 <= i_V_fu_309_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (exitcond2_fu_315_p2 == ap_const_lv1_0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        tmp_4_reg_418 <= tmp_4_fu_349_p1;
        tmp_5_reg_423 <= {{p_Val2_s_phi_fu_229_p4[ap_const_lv32_F : ap_const_lv32_8]}};
        tmp_6_reg_428 <= {{p_Val2_s_phi_fu_229_p4[ap_const_lv32_17 : ap_const_lv32_10]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(INPUT_STREAM_TVALID == ap_const_logic_0))) begin
        tmp_data_V_reg_378 <= INPUT_STREAM_TDATA;
        tmp_last_V_reg_386 <= INPUT_STREAM_TLAST;
    end
end

/// INPUT_STREAM_TREADY assign process. ///
always @ (ap_CS_fsm or INPUT_STREAM_TVALID or exitcond2_fu_315_p2 or ap_reg_ppiten_pp1_it0 or brmerge_fu_330_p2 or ap_sig_bdd_81 or ap_sig_bdd_92 or ap_reg_ppiten_pp1_it1 or ap_sig_bdd_113 or eol_3_reg_272)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(INPUT_STREAM_TVALID == ap_const_logic_0)) | ((ap_ST_st7_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == eol_3_reg_272) & ~ap_sig_bdd_113) | ((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (exitcond2_fu_315_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_330_p2) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))))) begin
        INPUT_STREAM_TREADY = ap_const_logic_1;
    end else begin
        INPUT_STREAM_TREADY = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_303_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond1_fu_303_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_303_p2)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond1_fu_303_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// axi_data_V_1_phi_fu_182_p4 assign process. ///
always @ (ap_CS_fsm or axi_data_V_1_reg_179 or p_Val2_s_reg_225 or exitcond2_reg_406 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        axi_data_V_1_phi_fu_182_p4 = p_Val2_s_reg_225;
    end else begin
        axi_data_V_1_phi_fu_182_p4 = axi_data_V_1_reg_179;
    end
end

/// eol_1_phi_fu_171_p4 assign process. ///
always @ (ap_CS_fsm or eol_1_reg_168 or axi_last_V_2_reg_213 or exitcond2_reg_406 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        eol_1_phi_fu_171_p4 = axi_last_V_2_reg_213;
    end else begin
        eol_1_phi_fu_171_p4 = eol_1_reg_168;
    end
end

/// eol_phi_fu_205_p4 assign process. ///
always @ (ap_CS_fsm or eol_reg_201 or eol_2_reg_237 or exitcond2_reg_406 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        eol_phi_fu_205_p4 = eol_2_reg_237;
    end else begin
        eol_phi_fu_205_p4 = eol_reg_201;
    end
end

/// img_data_stream_0_V_write assign process. ///
always @ (ap_CS_fsm or exitcond2_reg_406 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_81 or ap_sig_bdd_92 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        img_data_stream_0_V_write = ap_const_logic_1;
    end else begin
        img_data_stream_0_V_write = ap_const_logic_0;
    end
end

/// img_data_stream_1_V_write assign process. ///
always @ (ap_CS_fsm or exitcond2_reg_406 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_81 or ap_sig_bdd_92 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        img_data_stream_1_V_write = ap_const_logic_1;
    end else begin
        img_data_stream_1_V_write = ap_const_logic_0;
    end
end

/// img_data_stream_2_V_write assign process. ///
always @ (ap_CS_fsm or exitcond2_reg_406 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_81 or ap_sig_bdd_92 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (exitcond2_reg_406 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        img_data_stream_2_V_write = ap_const_logic_1;
    end else begin
        img_data_stream_2_V_write = ap_const_logic_0;
    end
end

/// p_Val2_s_phi_fu_229_p4 assign process. ///
always @ (INPUT_STREAM_TDATA or brmerge_fu_330_p2 or axi_data_V_1_phi_fu_182_p4 or ap_sig_bdd_170)
begin
    if (ap_sig_bdd_170) begin
        if (~(ap_const_lv1_0 == brmerge_fu_330_p2)) begin
            p_Val2_s_phi_fu_229_p4 = axi_data_V_1_phi_fu_182_p4;
        end else if ((ap_const_lv1_0 == brmerge_fu_330_p2)) begin
            p_Val2_s_phi_fu_229_p4 = INPUT_STREAM_TDATA;
        end else begin
            p_Val2_s_phi_fu_229_p4 = ap_const_lv32_1;
        end
    end else begin
        p_Val2_s_phi_fu_229_p4 = ap_const_lv32_1;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or INPUT_STREAM_TVALID or exitcond2_fu_315_p2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_81 or ap_sig_bdd_92 or ap_reg_ppiten_pp1_it1 or ap_sig_bdd_113 or exitcond1_fu_303_p2 or eol_3_reg_272 or tmp_user_V_fu_294_p1)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(INPUT_STREAM_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == tmp_user_V_fu_294_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(INPUT_STREAM_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_user_V_fu_294_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_303_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) & ~(exitcond2_fu_315_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_st7_fsm_5 : 
        begin
            if (((ap_const_lv1_0 == eol_3_reg_272) & ~ap_sig_bdd_113)) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else if ((~ap_sig_bdd_113 & ~(ap_const_lv1_0 == eol_3_reg_272))) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end
        end
        ap_ST_st8_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_phiprechg_axi_last_V_2_reg_213pp1_it0 = ap_const_lv1_1;
assign ap_reg_phiprechg_eol_2_reg_237pp1_it0 = ap_const_lv1_1;
assign ap_reg_phiprechg_p_Val2_s_reg_225pp1_it0 = ap_const_lv32_1;

/// ap_sig_bdd_113 assign process. ///
always @ (INPUT_STREAM_TVALID or eol_3_reg_272)
begin
    ap_sig_bdd_113 = ((INPUT_STREAM_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == eol_3_reg_272));
end

/// ap_sig_bdd_151 assign process. ///
always @ (exitcond2_fu_315_p2 or brmerge_fu_330_p2)
begin
    ap_sig_bdd_151 = ((exitcond2_fu_315_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == brmerge_fu_330_p2));
end

/// ap_sig_bdd_170 assign process. ///
always @ (ap_CS_fsm or exitcond2_fu_315_p2 or ap_reg_ppiten_pp1_it0)
begin
    ap_sig_bdd_170 = ((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (exitcond2_fu_315_p2 == ap_const_lv1_0));
end

/// ap_sig_bdd_80 assign process. ///
always @ (exitcond2_fu_315_p2 or brmerge_fu_330_p2)
begin
    ap_sig_bdd_80 = ((exitcond2_fu_315_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_330_p2));
end

/// ap_sig_bdd_81 assign process. ///
always @ (INPUT_STREAM_TVALID or exitcond2_fu_315_p2 or brmerge_fu_330_p2)
begin
    ap_sig_bdd_81 = ((INPUT_STREAM_TVALID == ap_const_logic_0) & (exitcond2_fu_315_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_330_p2));
end

/// ap_sig_bdd_92 assign process. ///
always @ (img_data_stream_0_V_full_n or img_data_stream_1_V_full_n or img_data_stream_2_V_full_n or exitcond2_reg_406)
begin
    ap_sig_bdd_92 = (((img_data_stream_0_V_full_n == ap_const_logic_0) & (exitcond2_reg_406 == ap_const_lv1_0)) | ((exitcond2_reg_406 == ap_const_lv1_0) & (img_data_stream_1_V_full_n == ap_const_logic_0)) | ((exitcond2_reg_406 == ap_const_lv1_0) & (img_data_stream_2_V_full_n == ap_const_logic_0)));
end

/// ap_sig_bdd_99 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_81 or ap_sig_bdd_92 or ap_reg_ppiten_pp1_it1)
begin
    ap_sig_bdd_99 = ((ap_ST_pp1_stg0_fsm_4 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ap_sig_bdd_81) | (ap_sig_bdd_92 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))));
end
assign brmerge_fu_330_p2 = (sof_1_fu_94 | eol_phi_fu_205_p4);
assign eol_1_mux_fu_342_p2 = (eol_1_phi_fu_171_p4 | not_sof_2_fu_336_p2);
assign exitcond1_fu_303_p2 = (p_s_reg_157 == ap_const_lv11_438? 1'b1: 1'b0);
assign exitcond2_fu_315_p2 = (p_1_reg_190 == ap_const_lv11_780? 1'b1: 1'b0);
assign i_V_fu_309_p2 = (p_s_reg_157 + ap_const_lv11_1);
assign img_data_stream_0_V_din = tmp_4_reg_418;
assign img_data_stream_1_V_din = tmp_5_reg_423;
assign img_data_stream_2_V_din = tmp_6_reg_428;
assign j_V_fu_321_p2 = (p_1_reg_190 + ap_const_lv11_1);
assign not_sof_2_fu_336_p2 = (sof_1_fu_94 ^ ap_const_lv1_1);
assign tmp_4_fu_349_p1 = p_Val2_s_phi_fu_229_p4[7:0];
assign tmp_user_V_fu_294_p1 = INPUT_STREAM_TUSER;


endmodule //top_AXIvideo2Mat_32_1080_1920_32_s

