-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.2
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top,hls_ip_2014_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.315000,HLS_SYN_LAT=4154765,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg0_fsm_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_ST_st6_fsm_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_77F : STD_LOGIC_VECTOR (10 downto 0) := "11101111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal p_3_i_reg_195 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_fu_239_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_313 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond4_i_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal img_0_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_0_V_empty_n : STD_LOGIC;
    signal img_0_data_stream_0_V_read : STD_LOGIC;
    signal img_0_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_1_V_empty_n : STD_LOGIC;
    signal img_0_data_stream_1_V_read : STD_LOGIC;
    signal img_0_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_2_V_empty_n : STD_LOGIC;
    signal img_0_data_stream_2_V_read : STD_LOGIC;
    signal ap_sig_bdd_72 : BOOLEAN;
    signal ap_sig_ioackin_OUTPUT_STREAM_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal j_V_fu_251_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal axi_last_V_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_reg_327 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_i_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_done : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_idle : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_ready : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TVALID : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TREADY : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_full_n : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_write : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_full_n : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_write : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_full_n : STD_LOGIC;
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_write : STD_LOGIC;
    signal p_i_reg_184 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal img_0_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_0_V_full_n : STD_LOGIC;
    signal img_0_data_stream_0_V_write : STD_LOGIC;
    signal img_0_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_1_V_full_n : STD_LOGIC;
    signal img_0_data_stream_1_V_write : STD_LOGIC;
    signal img_0_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal img_0_data_stream_2_V_full_n : STD_LOGIC;
    signal img_0_data_stream_2_V_write : STD_LOGIC;
    signal tmp_user_V_fu_124 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ioackin_OUTPUT_STREAM_TREADY : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal top_ap_rst : STD_LOGIC;
    signal img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U_ap_dummy_ce : STD_LOGIC;
    signal img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U_ap_dummy_ce : STD_LOGIC;
    signal img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U_ap_dummy_ce : STD_LOGIC;

    component top_AXIvideo2Mat_32_1080_1920_32_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst_n : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        INPUT_STREAM_TVALID : IN STD_LOGIC;
        INPUT_STREAM_TREADY : OUT STD_LOGIC;
        INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component FIFO_top_img_0_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_top_img_0_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_top_img_0_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207 : component top_AXIvideo2Mat_32_1080_1920_32_s
    port map (
        ap_clk => ap_clk,
        ap_rst_n => ap_rst_n,
        ap_start => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start,
        ap_done => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_done,
        ap_idle => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_idle,
        ap_ready => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_ready,
        INPUT_STREAM_TDATA => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TLAST,
        INPUT_STREAM_TID => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TID,
        INPUT_STREAM_TDEST => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TDEST,
        img_data_stream_0_V_din => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_full_n,
        img_data_stream_0_V_write => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_write,
        img_data_stream_1_V_din => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_full_n,
        img_data_stream_1_V_write => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_write,
        img_data_stream_2_V_din => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_full_n,
        img_data_stream_2_V_write => grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_write);

    img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U : component FIFO_top_img_0_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => top_ap_rst,
        if_read_ce => img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U_ap_dummy_ce,
        if_write_ce => img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U_ap_dummy_ce,
        if_din => img_0_data_stream_0_V_din,
        if_full_n => img_0_data_stream_0_V_full_n,
        if_write => img_0_data_stream_0_V_write,
        if_dout => img_0_data_stream_0_V_dout,
        if_empty_n => img_0_data_stream_0_V_empty_n,
        if_read => img_0_data_stream_0_V_read);

    img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U : component FIFO_top_img_0_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => top_ap_rst,
        if_read_ce => img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U_ap_dummy_ce,
        if_write_ce => img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U_ap_dummy_ce,
        if_din => img_0_data_stream_1_V_din,
        if_full_n => img_0_data_stream_1_V_full_n,
        if_write => img_0_data_stream_1_V_write,
        if_dout => img_0_data_stream_1_V_dout,
        if_empty_n => img_0_data_stream_1_V_empty_n,
        if_read => img_0_data_stream_1_V_read);

    img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U : component FIFO_top_img_0_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => top_ap_rst,
        if_read_ce => img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U_ap_dummy_ce,
        if_write_ce => img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U_ap_dummy_ce,
        if_din => img_0_data_stream_2_V_din,
        if_full_n => img_0_data_stream_2_V_full_n,
        if_write => img_0_data_stream_2_V_write,
        if_dout => img_0_data_stream_2_V_dout,
        if_empty_n => img_0_data_stream_2_V_empty_n,
        if_read => img_0_data_stream_2_V_read);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_OUTPUT_STREAM_TREADY assign process. --
    ap_reg_ioackin_OUTPUT_STREAM_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
            else
                if ((((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_0;
                elsif ((((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_72 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_logic_1 = OUTPUT_STREAM_TREADY)))) then 
                    ap_reg_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond4_i_fu_245_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_i_fu_233_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (exitcond4_i_fu_245_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_ST_st3_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_i_fu_233_p2)) or ((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond4_i_fu_245_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg assign process. --
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n = '0') then
                grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_ready)) then 
                    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_3_i_reg_195 assign process. --
    p_3_i_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (exitcond4_i_fu_245_p2 = ap_const_lv1_0))) then 
                p_3_i_reg_195 <= j_V_fu_251_p2;
            elsif (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_i_fu_233_p2))) then 
                p_3_i_reg_195 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- p_i_reg_184 assign process. --
    p_i_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st6_fsm_4 = ap_CS_fsm)) then 
                p_i_reg_184 <= i_V_reg_313;
            elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_logic_0 = grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_done)))) then 
                p_i_reg_184 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- tmp_user_V_fu_124 assign process. --
    tmp_user_V_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
                tmp_user_V_fu_124 <= ap_const_lv1_0;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                tmp_user_V_fu_124 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (exitcond4_i_fu_245_p2 = ap_const_lv1_0))) then
                axi_last_V_reg_327 <= axi_last_V_fu_257_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                exitcond4_i_reg_318 <= exitcond4_i_fu_245_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                i_V_reg_313 <= i_V_fu_239_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond4_i_fu_245_p2, exitcond4_i_reg_318, ap_reg_ppiten_pp0_it0, ap_sig_bdd_72, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_reg_ppiten_pp0_it1, exitcond3_i_fu_233_p2, grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_done))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond3_i_fu_233_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                end if;
            when ap_ST_pp0_stg0_fsm_3 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond4_i_fu_245_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and not((exitcond4_i_fu_245_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                end if;
            when ap_ST_st6_fsm_4 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    INPUT_STREAM_TREADY <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TREADY;
    OUTPUT_STREAM_TDATA <= (((ap_const_lv8_FF & img_0_data_stream_2_V_dout) & img_0_data_stream_1_V_dout) & img_0_data_stream_0_V_dout);
    OUTPUT_STREAM_TDEST <= ap_const_lv1_0;
    OUTPUT_STREAM_TID <= ap_const_lv1_0;
    OUTPUT_STREAM_TKEEP <= ap_const_lv4_F;
    OUTPUT_STREAM_TLAST <= axi_last_V_reg_327;
    OUTPUT_STREAM_TSTRB <= ap_const_lv4_0;
    OUTPUT_STREAM_TUSER <= tmp_user_V_fu_124;

    -- OUTPUT_STREAM_TVALID assign process. --
    OUTPUT_STREAM_TVALID_assign_proc : process(ap_CS_fsm, exitcond4_i_reg_318, ap_sig_bdd_72, ap_reg_ppiten_pp0_it1, ap_reg_ioackin_OUTPUT_STREAM_TREADY)
    begin
        if ((((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_72 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) and (ap_const_logic_0 = ap_reg_ioackin_OUTPUT_STREAM_TREADY)))) then 
            OUTPUT_STREAM_TVALID <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm, exitcond3_i_fu_233_p2)
    begin
        if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_i_fu_233_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond3_i_fu_233_p2)
    begin
        if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_i_fu_233_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_72 assign process. --
    ap_sig_bdd_72_assign_proc : process(exitcond4_i_reg_318, img_0_data_stream_0_V_empty_n, img_0_data_stream_1_V_empty_n, img_0_data_stream_2_V_empty_n)
    begin
                ap_sig_bdd_72 <= (((img_0_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond4_i_reg_318 = ap_const_lv1_0)) or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (img_0_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (img_0_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_ioackin_OUTPUT_STREAM_TREADY assign process. --
    ap_sig_ioackin_OUTPUT_STREAM_TREADY_assign_proc : process(OUTPUT_STREAM_TREADY, ap_reg_ioackin_OUTPUT_STREAM_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_OUTPUT_STREAM_TREADY)) then 
            ap_sig_ioackin_OUTPUT_STREAM_TREADY <= OUTPUT_STREAM_TREADY;
        else 
            ap_sig_ioackin_OUTPUT_STREAM_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    axi_last_V_fu_257_p2 <= "1" when (p_3_i_reg_195 = ap_const_lv11_77F) else "0";
    exitcond3_i_fu_233_p2 <= "1" when (p_i_reg_184 = ap_const_lv11_438) else "0";
    exitcond4_i_fu_245_p2 <= "1" when (p_3_i_reg_195 = ap_const_lv11_780) else "0";
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TDATA <= INPUT_STREAM_TDATA;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TDEST <= INPUT_STREAM_TDEST;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TID <= INPUT_STREAM_TID;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TKEEP <= INPUT_STREAM_TKEEP;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TLAST <= INPUT_STREAM_TLAST;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TSTRB <= INPUT_STREAM_TSTRB;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TUSER <= INPUT_STREAM_TUSER;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_INPUT_STREAM_TVALID <= INPUT_STREAM_TVALID;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_ap_start_ap_start_reg;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_full_n <= img_0_data_stream_0_V_full_n;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_full_n <= img_0_data_stream_1_V_full_n;
    grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_full_n <= img_0_data_stream_2_V_full_n;
    i_V_fu_239_p2 <= std_logic_vector(unsigned(p_i_reg_184) + unsigned(ap_const_lv11_1));
    img_0_data_stream_0_V_din <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_din;
    img_0_data_stream_0_V_img_0_data_stream_0_V_fifo_U_ap_dummy_ce <= ap_const_logic_1;

    -- img_0_data_stream_0_V_read assign process. --
    img_0_data_stream_0_V_read_assign_proc : process(ap_CS_fsm, exitcond4_i_reg_318, ap_sig_bdd_72, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            img_0_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_0_V_write assign process. --
    img_0_data_stream_0_V_write_assign_proc : process(ap_CS_fsm, grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_write)
    begin
        if (((ap_ST_st1_fsm_0 = ap_CS_fsm) or (ap_ST_st2_fsm_1 = ap_CS_fsm))) then 
            img_0_data_stream_0_V_write <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_0_V_write;
        else 
            img_0_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_0_data_stream_1_V_din <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_din;
    img_0_data_stream_1_V_img_0_data_stream_1_V_fifo_U_ap_dummy_ce <= ap_const_logic_1;

    -- img_0_data_stream_1_V_read assign process. --
    img_0_data_stream_1_V_read_assign_proc : process(ap_CS_fsm, exitcond4_i_reg_318, ap_sig_bdd_72, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            img_0_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_1_V_write assign process. --
    img_0_data_stream_1_V_write_assign_proc : process(ap_CS_fsm, grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_write)
    begin
        if (((ap_ST_st1_fsm_0 = ap_CS_fsm) or (ap_ST_st2_fsm_1 = ap_CS_fsm))) then 
            img_0_data_stream_1_V_write <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_1_V_write;
        else 
            img_0_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_0_data_stream_2_V_din <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_din;
    img_0_data_stream_2_V_img_0_data_stream_2_V_fifo_U_ap_dummy_ce <= ap_const_logic_1;

    -- img_0_data_stream_2_V_read assign process. --
    img_0_data_stream_2_V_read_assign_proc : process(ap_CS_fsm, exitcond4_i_reg_318, ap_sig_bdd_72, ap_sig_ioackin_OUTPUT_STREAM_TREADY, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_ST_pp0_stg0_fsm_3 = ap_CS_fsm) and (exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_72 or ((exitcond4_i_reg_318 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_OUTPUT_STREAM_TREADY))) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then 
            img_0_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_0_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- img_0_data_stream_2_V_write assign process. --
    img_0_data_stream_2_V_write_assign_proc : process(ap_CS_fsm, grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_write)
    begin
        if (((ap_ST_st1_fsm_0 = ap_CS_fsm) or (ap_ST_st2_fsm_1 = ap_CS_fsm))) then 
            img_0_data_stream_2_V_write <= grp_top_AXIvideo2Mat_32_1080_1920_32_s_fu_207_img_data_stream_2_V_write;
        else 
            img_0_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_251_p2 <= std_logic_vector(unsigned(p_3_i_reg_195) + unsigned(ap_const_lv11_1));

    -- top_ap_rst assign process. --
    top_ap_rst_assign_proc : process(ap_rst_n)
    begin
                top_ap_rst <= not(ap_rst_n);
    end process;

end behav;
